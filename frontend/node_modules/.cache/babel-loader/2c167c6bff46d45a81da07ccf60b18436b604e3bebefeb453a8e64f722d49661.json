{"ast":null,"code":"var _jsxFileName = \"/Users/shrishtishukla/healmind-ai-2-/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport ChatMessage from './components/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const chatContainerRef = useRef(null);\n\n  // Scroll to bottom of chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Load chat history\n  useEffect(() => {\n    const loadHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:5500/api/chat/history');\n        setMessages(response.data.map(msg => [{\n          text: msg.user,\n          isBot: false\n        }, {\n          text: msg.bot,\n          isBot: true\n        }]).flat());\n      } catch (err) {\n        console.error('Failed to load chat history:', err);\n        setError('Failed to load chat history');\n      }\n    };\n    loadHistory();\n  }, []);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    try {\n      setIsLoading(true);\n      setError('');\n\n      // Add user message immediately\n      setMessages(prev => [...prev, {\n        text: inputMessage,\n        isBot: false\n      }]);\n      setInputMessage('');\n\n      // Send to backend\n      const response = await axios.post('http://localhost:5500/api/chat/send', {\n        message: inputMessage\n      });\n\n      // Add bot response\n      setMessages(prev => [...prev, {\n        text: response.data.text,\n        isBot: true\n      }]);\n    } catch (err) {\n      console.error('Failed to send message:', err);\n      setError('Failed to send message');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"Healmind AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        marginBottom: '20px'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message.text,\n        isBot: message.isBot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#666'\n        },\n        children: \"AI is thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          textAlign: 'center'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type your message here...\",\n        style: {\n          flex: 1,\n          padding: '10px',\n          borderRadius: '5px',\n          border: '1px solid #ddd'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !inputMessage.trim(),\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XiJSDaV+LH2y2xxJ25LQ1hywRTs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","ChatMessage","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","chatContainerRef","current","scrollTop","scrollHeight","loadHistory","response","get","data","map","msg","text","user","isBot","bot","flat","err","console","handleSendMessage","e","preventDefault","trim","prev","post","message","style","maxWidth","margin","padding","height","display","flexDirection","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","flex","overflowY","border","borderRadius","marginBottom","index","onSubmit","gap","type","value","onChange","target","placeholder","disabled","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["/Users/shrishtishukla/healmind-ai-2-/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport ChatMessage from './components/ChatMessage';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const chatContainerRef = useRef(null);\n\n  // Scroll to bottom of chat\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Load chat history\n  useEffect(() => {\n    const loadHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:5500/api/chat/history');\n        setMessages(response.data.map(msg => ([\n          { text: msg.user, isBot: false },\n          { text: msg.bot, isBot: true }\n        ])).flat());\n      } catch (err) {\n        console.error('Failed to load chat history:', err);\n        setError('Failed to load chat history');\n      }\n    };\n    loadHistory();\n  }, []);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Add user message immediately\n      setMessages(prev => [...prev, { text: inputMessage, isBot: false }]);\n      setInputMessage('');\n\n      // Send to backend\n      const response = await axios.post('http://localhost:5500/api/chat/send', {\n        message: inputMessage\n      });\n\n      // Add bot response\n      setMessages(prev => [...prev, { text: response.data.text, isBot: true }]);\n    } catch (err) {\n      console.error('Failed to send message:', err);\n      setError('Failed to send message');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    }}>\n      <h1 style={{ textAlign: 'center', color: '#333' }}>Healmind AI Chatbot</h1>\n      \n      {/* Chat container */}\n      <div \n        ref={chatContainerRef}\n        style={{\n          flex: 1,\n          overflowY: 'auto',\n          padding: '20px',\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          marginBottom: '20px'\n        }}\n      >\n        {messages.map((message, index) => (\n          <ChatMessage \n            key={index}\n            message={message.text}\n            isBot={message.isBot}\n          />\n        ))}\n        {isLoading && <div style={{ textAlign: 'center', color: '#666' }}>AI is thinking...</div>}\n        {error && <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>}\n      </div>\n\n      {/* Message input */}\n      <form onSubmit={handleSendMessage} style={{ display: 'flex', gap: '10px' }}>\n        <input\n          type=\"text\"\n          value={inputMessage}\n          onChange={(e) => setInputMessage(e.target.value)}\n          placeholder=\"Type your message here...\"\n          style={{\n            flex: 1,\n            padding: '10px',\n            borderRadius: '5px',\n            border: '1px solid #ddd'\n          }}\n        />\n        <button \n          type=\"submit\"\n          disabled={isLoading || !inputMessage.trim()}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          }}\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}